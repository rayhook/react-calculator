{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Calculator","props","array","inputType","toNumber","combine","operationArray","state","input","operation","display2","handleZero","bind","handleOne","handleTwo","handleThree","handleFour","handleFive","handleSix","handleSeven","handleEight","handleNine","handleAdd","handleSubtract","handleMultiply","handleDivide","handleDecimal","handleClear","handleEquals","this","setState","findZero","indexOf","findDecimal","console","log","filter","element","length","handleOperation","Number","toFixed","push","join","reduce","a","b","createNumber","makeNumber","limit","repeatedIndex","i","nextIndex","findIndex","id","onClick","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9d291215.chunk.js","sourcesContent":["\nimport React, {Component} from 'react';\nimport \"./App.css\";\n\nclass Calculator extends Component {\n  constructor(props){\n    super(props);\n    this.array =[]\n    this.inputType = []\n    this.toNumber = []\n    this.combine = []\n    this.operationArray = []\n    this.state = {\n      input: [],\n      operation: '', \n      display2: []\n    }\n    this.handleZero = this.handleZero.bind(this);\n    this.handleOne = this.handleOne.bind(this);\n    this.handleTwo = this.handleTwo.bind(this);\n    this.handleThree = this.handleThree.bind(this);\n    this.handleFour = this.handleFour.bind(this);\n    this.handleFive = this.handleFive.bind(this);\n    this.handleSix = this.handleSix.bind(this);\n    this.handleSeven = this.handleSeven.bind(this);\n    this.handleEight = this.handleEight.bind(this);\n    this.handleNine = this.handleNine.bind(this);\n    this.handleAdd = this.handleAdd.bind(this);\n    this.handleSubtract = this.handleSubtract.bind(this);\n    this.handleMultiply = this.handleMultiply.bind(this);\n    this.handleDivide = this.handleDivide.bind(this);\n    this.handleDecimal = this.handleDecimal.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleEquals = this.handleEquals.bind(this);\n  }\n\n\n\n    handleOne () {\n      this.array = [ ...this.array, \"1\"]\n      this.inputType = [...this.inputType, \"num\"]\n      this.setState({\n       input: this.array,\n       display2: [...this.state.display2, '1']\n     })\n    }\n    \n    handleTwo () {\n      this.array = [ ...this.array, \"2\"]\n      this.inputType = [...this.inputType, \"num\"]\n      this.setState({\n       input: this.array,\n       display2: [...this.state.display2, '2']\n     })\n    }\n\n    handleThree () {\n      this.array = [ ...this.array, \"3\"]\n      this.inputType = [...this.inputType, \"num\"]\n      this.setState({\n       input: this.array,\n       display2: [...this.state.display2, '3']\n     })\n    }\n\n    handleFour () {\n      this.array = [ ...this.array, \"4\"]\n      this.inputType = [...this.inputType, \"num\"]\n      this.setState({\n       input: this.array,\n       display2: [...this.state.display2, '4']\n     })\n    }\n\n    handleFive () {\n      this.array = [ ...this.array, \"5\"]\n      this.inputType = [...this.inputType, \"num\"]\n      this.setState({\n       input: this.array,\n       display2: [...this.state.display2, '5']\n     })\n    }\n\n    handleSix () {\n      this.array = [ ...this.array, \"6\"]\n      this.inputType = [...this.inputType, \"num\"]\n      this.setState({\n       input: this.array,\n       display2: [...this.state.display2, '6']\n     })\n    }\n\n    handleSeven () {\n      this.array = [ ...this.array, \"7\"]\n      this.inputType = [...this.inputType, \"num\"]\n      this.setState({\n       input: this.array,\n       display2: [...this.state.display2, '7']\n     })\n    }\n\n    handleEight () {\n      this.array = [ ...this.array, \"8\"]\n      this.inputType = [...this.inputType, \"num\"]\n      this.setState({\n       input: this.array,\n       display2: [...this.state.display2, '8']\n     })\n    }\n\n    handleNine () {\n      this.array = [ ...this.array, \"9\"]\n      this.inputType = [...this.inputType, \"num\"]\n      this.setState({\n       input: this.array,\n       display2: [...this.state.display2, '9']\n     })\n    }\n\n    handleZero() {\n        let findZero = this.array.indexOf('0')\n        let findDecimal = this.array.indexOf('.')\n\n        if(findZero !== 0 || findDecimal === 1){\n          this.array = [...this.array, '0']\n          this.inputType = [...this.inputType, \"num\"]\n            this.setState({\n             input: this.array,\n             display2: [...this.state.display2, '0']\n           })\n        } else{\n          console.log('Mutiple Zeros')\n        }\n      \n    };\n\n    handleDecimal () {\n      let dublicateDecimal = this.array.filter((element) => element === '.')\n      \n      if(dublicateDecimal.length === 0) {\n        this.array = [...this.array, \".\"]\n        this.inputType = [...this.inputType, \"num\"]\n        \n        this.setState({\n          input: this.array,\n          display2: [...this.state.display2, '.']\n        })\n      }\n      else{\n        this.array = [...this.array]\n        this.setState({\n          input: this.array, \n          display2: [...this.state.display2]\n        })  \n      }\n    }\n\n    handleClear () {\n      this.array = []\n      this.toNumber = []\n      this.combine = []\n      this.inputType = []\n      this.operationArray = []\n      this.setState({\n        input: 0,\n        operation: '', \n        display2: []\n\n    })\n  }\n\n  // Adding \n  // joined = string number, Number() to convert string to number - number pushed into array, finally reduce()\n   \n  handleAdd () {\n    if(this.toNumber.length !== 0) { \n      \n      if(this.array.length === 0) { // if chaining after equal\n        this.combine = this.handleOperation(this.state.operation)\n        this.combine = Number(this.combine.toFixed(4))\n        this.toNumber = [this.combine]\n      }else{\n        this.toNumber.push(Number(this.array.join(''))) \n        this.array = []\n        this.combine = this.handleOperation(this.state.operation)\n        this.combine = Number(this.combine.toFixed(4))\n        this.toNumber = [this.combine]\n      }\n    }\n    else{\n      this.toNumber.push(Number(this.array.join('')))\n      this.array = []\n      this.combine = this.toNumber.reduce((a,b)=> a + b)\n      this.combine = Number(this.combine.toFixed(4))\n      this.toNumber = [this.combine]\n      }\n      this.operationArray.push(\"add\")\n      this.inputType = [...this.inputType, \"opr\"]\n      this.setState({\n        input: this.combine,\n        operation: 'add',\n        display2: [...this.state.display2, '+']\n    })\n  }\n\n    handleSubtract () {\n       // chain operation\n       if(this.toNumber.length !== 0) { \n        if(this.array.length === 0) {\n        this.combine = this.handleOperation(this.state.operation)\n        this.combine = Number(this.combine.toFixed(4))\n        this.toNumber = [this.combine]\n\n        }else{\n        let createNumber = Number(this.array.join(''))\n        this.toNumber.push(createNumber) \n        this.array = []\n        this.combine = this.handleOperation(this.state.operation)\n        this.combine = Number(this.combine.toFixed(4))\n        this.toNumber = [this.combine]\n      }\n    }\n      else{\n      // If its first entry\n      let makeNumber = Number(this.array.join(''))\n      this.toNumber.push(makeNumber)\n      this.array = []\n      this.combine = this.toNumber.reduce((a,b) => a - b)\n      this.combine =  Number(this.combine.toFixed(4))\n      this.toNumber = [this.combine]\n      }\n      this.operationArray.push(\"subtract\")\n      this.inputType = [...this.inputType, \"opr\"]\n      this.setState({\n        input: this.combine,\n        operation: 'subtract',\n        display2: [...this.state.display2, '-']\n    })\n  }\n\n    handleDivide () {\n           // chain operation\n        if(this.toNumber.length !== 0) { \n          if(this.array.length === 0) {\n            this.combine = this.handleOperation(this.state.operation)\n            this.combine =  Number(this.combine.toFixed(4))\n            this.toNumber = [this.combine]\n          }else{\n          let createNumber = Number(this.array.join(''))\n          this.toNumber.push(createNumber) \n          this.array = []\n          this.combine = this.handleOperation(this.state.operation)\n          this.combine = Number(this.combine.toFixed(4))\n          this.toNumber = [this.combine]\n          }\n        }\n       else{\n       // If its first entry\n        this.toNumber.push(Number(this.array.join('')))\n        this.array = []\n        this.combine = this.toNumber.reduce((a,b) => a / b)\n        this.combine = Number(this.combine.toFixed(4))\n        this.toNumber = [this.combine]\n       }\n       this.operationArray.push(\"divide\")\n       this.inputType = [...this.inputType, \"opr\"]\n       this.setState({\n         input: this.combine,\n         operation: 'divide',\n         display2: [...this.state.display2, '/']\n     })\n    }\n\n    handleMultiply () {\n      // chain operation\n      if(this.toNumber.length !== 0){ \n       \n        if(this.array.length === 0) {\n          this.combine = this.handleOperation(this.state.operation)\n          this.combine = Number(this.combine.toFixed(4))\n          this.toNumber = [this.combine]\n        }else{\n        let createNumber = Number(this.array.join(''))\n        this.toNumber.push(createNumber) \n        this.array = []\n        this.combine = this.handleOperation(this.state.operation)\n        this.combine = Number(this.combine.toFixed(4))\n        this.toNumber = [this.combine]\n      }\n    }\n       else{\n       // If its first entry\n       this.toNumber.push(Number(this.array.join('')))\n       this.array = []\n       this.combine = this.toNumber.reduce((a,b)=> a * b)\n       this.combine = Number(this.combine.toFixed(4))\n       this.toNumber = [this.combine]\n       }\n       this.operationArray.push(\"multiply\")\n       this.inputType = [...this.inputType, \"opr\"]\n       this.setState({\n         input: this.combine,\n         operation: 'multiply',\n         display2: [...this.state.display2, '*']\n     })\n    }\n    \n    // engine for calculation\n    handleOperation(operation) {\n      switch(operation){\n        case 'add':\n          return this.combine =  this.toNumber.reduce((a, b)=> a + b)\n          break;\n        case 'subtract':\n        \n        let limit = this.inputType.length\n        let repeatedIndex = []\n        for(let i = 0; i < limit; i++){\n          let nextIndex = i + 1\n          if(this.inputType[i] === 'opr' && this.inputType[i] === this.inputType[nextIndex]) {\n            repeatedIndex.push(i)\n          }  \n        }\n        if(repeatedIndex.length!== 0 && this.operationArray.length > 1 && this.operationArray.findIndex(element => element === 'subtract') === this.operationArray.findIndex(element => element === 'multiply') + 1) {\n              \n          return this.combine = this.toNumber.reduce((a, b)=> a * - b)\n\n          }else if(repeatedIndex.length!== 0 && this.operationArray.length > 1 && this.operationArray.findIndex(element => element === 'subtract') === this.operationArray.findIndex(element => element === 'divide') + 1) {\n            \n            return this.combine = this.toNumber.reduce((a, b)=> a / - b)\n        }\n          else if(repeatedIndex.length === 0){\n          return this.combine =  this.toNumber.reduce((a, b)=> a - b)\n          }\n          break;\n        \n        // Runs codition for consecutive operators \n        case 'divide':\n          return this.combine =  this.toNumber.reduce((a, b)=> a / b)\n          break;\n        case 'multiply':\n          return this.combine =  this.toNumber.reduce((a, b)=> a * b )\n          break;\n        default:\n          console.log(\"no operations selected\");\n\n    }\n  }\n\n  // Equal\n    handleEquals () {\n      this.toNumber.push(Number(this.array.join('')))\n      this.array = []\n      this.combine = this.handleOperation(this.state.operation)\n      this.combine = Number(this.combine.toFixed(4))\n      this.toNumber = [this.combine]\n      this.setState({\n        input: this.combine,\n        display2: [this.combine]\n   })\n      \n    }\n  render(){\n    return(\n      <div>\n        <div id=\"container\">\n          <div id=\"calculator\">\n            <div id=\"display\">{this.state.input}</div>  \n            <div id=\"display2\">{this.state.display2}</div>  \n            <button id=\"seven\" onClick={this.handleSeven}>7</button>\n            <button id=\"eight\" onClick={this.handleEight}>8</button>\n            <button id=\"nine\" onClick={this.handleNine}>9</button> \n            <button id=\"clear\" onClick={this.handleClear}>AC</button>     \n            <button id=\"four\" onClick={this.handleFour}>4</button>\n            <button id=\"five\" onClick={this.handleFive}>5</button>\n            <button id=\"six\" onClick={this.handleSix}>6</button>\n            <button id=\"divide\" onClick={this.handleDivide}>/</button>      \n            <button id=\"one\" onClick={this.handleOne}>1</button>\n            <button id=\"two\" onClick={this.handleTwo}>2</button>\n            <button id=\"three\" onClick={this.handleThree}>3</button>\n            <button id=\"multiply\" onClick={this.handleMultiply}>*</button>         \n            <button id=\"zero\" onClick={this.handleZero}>0</button> \n            <button id=\"decimal\" onClick={this.handleDecimal}>.</button>      \n            <button id=\"add\" onClick={this.handleAdd}>+</button>  \n            <button id=\"equals\" onClick={this.handleEquals}>=</button>\n            <button id=\"subtract\" onClick={this.handleSubtract}>-</button>    \n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n  export default Calculator;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Calculator from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Calculator />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}